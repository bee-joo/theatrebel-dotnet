// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using theatrebel;

#nullable disable

namespace theatrebel.Migrations
{
    [DbContext(typeof(TheatrebelContext))]
    partial class TheatrebelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlayWriter", b =>
                {
                    b.Property<long>("PlaysId")
                        .HasColumnType("bigint")
                        .HasColumnName("plays_id");

                    b.Property<long>("WritersId")
                        .HasColumnType("bigint")
                        .HasColumnName("writers_id");

                    b.HasKey("PlaysId", "WritersId")
                        .HasName("pk_play_writer");

                    b.HasIndex("WritersId")
                        .HasDatabaseName("ix_play_writer_writers_id");

                    b.ToTable("play_writer", (string)null);
                });

            modelBuilder.Entity("theatrebel.Data.Models.Play", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<int?>("Date")
                        .HasColumnType("integer")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Origname")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("origname");

                    b.HasKey("Id")
                        .HasName("pk_plays");

                    b.ToTable("plays", (string)null);
                });

            modelBuilder.Entity("theatrebel.Data.Models.Review", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("PlayId")
                        .HasColumnType("bigint")
                        .HasColumnName("play_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("PlayId")
                        .HasDatabaseName("ix_reviews_play_id");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("theatrebel.Data.Models.Writer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Country")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("country");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_writers");

                    b.ToTable("writers", (string)null);
                });

            modelBuilder.Entity("PlayWriter", b =>
                {
                    b.HasOne("theatrebel.Data.Models.Play", null)
                        .WithMany()
                        .HasForeignKey("PlaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_play_writer_plays_plays_id");

                    b.HasOne("theatrebel.Data.Models.Writer", null)
                        .WithMany()
                        .HasForeignKey("WritersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_play_writer_writers_writers_id");
                });

            modelBuilder.Entity("theatrebel.Data.Models.Review", b =>
                {
                    b.HasOne("theatrebel.Data.Models.Play", "Play")
                        .WithMany("Reviews")
                        .HasForeignKey("PlayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_plays_play_id");

                    b.Navigation("Play");
                });

            modelBuilder.Entity("theatrebel.Data.Models.Play", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
